{"version":3,"sources":["webpack://wesbury/./node_modules/@govuk-react/breadcrumbs/es/atoms/link/index.js","webpack://wesbury/./node_modules/@govuk-react/breadcrumbs/es/index.js","webpack://wesbury/./node_modules/@govuk-react/list-item/es/index.js","webpack://wesbury/./node_modules/@govuk-react/ordered-list/es/index.js","webpack://wesbury/./node_modules/@govuk-react/unordered-list/es/index.js","webpack://wesbury/./src/components/basic/paragraph.tsx","webpack://wesbury/./node_modules/@govuk-react/grid-row/es/index.js","webpack://wesbury/./node_modules/@govuk-react/grid-col/es/index.js","webpack://wesbury/./src/components/templates/laws-list.tsx"],"names":["CHEVRON_BORDER_COLOUR","BreadcrumbsContainer","size","marginTop","marginBottom","BreadcrumbsList","margin","padding","listStyleType","display","BreadcrumbsListItem","position","marginLeft","paddingLeft","content","top","bottom","left","CHEVRON_ALTITUDE_CALCULATED","width","height","transform","border","borderWidth","CHEVRON_BORDER_WIDTH","borderColor","Breadcrumbs","_ref","children","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","map","child","Link","ListItem","propTypes","OrderedList","direction","_ref2","_ref3","_ref4","type","bullet","number","translateType","includes","DocumentedComponent","defaultProps","undefined","_extends","assign","arguments","prototype","hasOwnProperty","call","apply","this","UnorderedList","as","styled","typography","spacing","_styled","StyledRow","flexDirection","colValues","columnOneQuarter","columnOneThird","columnOneHalf","columnTwoThirds","columnThreeQuarters","columnFull","widthFromProps","noDefault","desktopWidthFromProps","mediaQuery","setGrowShrink","style","hasAutoWidth","flexGrow","flexShrink","StyledColumn","boxSizing","paddingRight","_widthStyle","widthValue","widthStyle","entries","forEach","value","desktopWidthStyle","setWidth","setDesktopWidth","GridCol","getLawType","laws","filter","law","frontmatter","sort","lhs","rhs","ensureNumber","order","displayLawLinks","emptyMessage","arrayHasElements","hash","href","config","slug","title","pageContext","constitution","treaties","orders","precedents","Fragment","H2"],"mappings":"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","file":"component---src-components-templates-laws-list-tsx-14b9c31d7a65472783d9.js","sourcesContent":["import styled from 'styled-components';\nimport { link } from '@govuk-react/lib';\nvar Link = styled('a')(link.common(), link.styleText);\nexport default Link;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { SECONDARY_TEXT_COLOUR } from 'govuk-colours';\nimport { SPACING_POINTS } from '@govuk-react/constants';\nimport { spacing, typography } from '@govuk-react/lib';\nimport Link from './atoms/link'; // Constants for chevron sourced from govuk-frontend\n\nvar CHEVRON_SIZE = 7;\nvar CHEVRON_BORDER_WIDTH = 1;\nvar CHEVRON_BORDER_COLOUR = SECONDARY_TEXT_COLOUR;\nvar CHEVRON_ALTITUDE_CALCULATED = 5.655;\nvar BreadcrumbsContainer = styled('div')(typography.font({\n  size: 16\n}), typography.textColour, {\n  // margins here are not responsive, hence why they're not specified using withWhiteSpace\n  marginTop: SPACING_POINTS[3],\n  marginBottom: SPACING_POINTS[2]\n}, spacing.withWhiteSpace());\nvar BreadcrumbsList = styled('ol')({\n  margin: 0,\n  padding: 0,\n  listStyleType: 'none',\n  display: 'block'\n});\nvar BreadcrumbsListItem = styled('li')({\n  display: 'inline-block',\n  position: 'relative',\n  marginBottom: SPACING_POINTS[1],\n  marginLeft: SPACING_POINTS[2],\n  paddingLeft: SPACING_POINTS[2] + CHEVRON_ALTITUDE_CALCULATED,\n  '::before': {\n    content: \"''\",\n    display: 'block',\n    position: 'absolute',\n    top: '-1px',\n    bottom: '1px',\n    left: CHEVRON_ALTITUDE_CALCULATED * -2 + CHEVRON_SIZE + CHEVRON_BORDER_WIDTH,\n    width: CHEVRON_SIZE,\n    height: CHEVRON_SIZE,\n    margin: 'auto 0',\n    transform: 'rotate(45deg)',\n    border: 'solid',\n    borderWidth: CHEVRON_BORDER_WIDTH + \"px \" + CHEVRON_BORDER_WIDTH + \"px 0 0\",\n    borderColor: CHEVRON_BORDER_COLOUR\n  },\n  ':first-child': {\n    marginLeft: 0,\n    paddingLeft: 0,\n    '::before': {\n      content: 'none',\n      display: 'none'\n    }\n  }\n});\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * <Breadcrumbs>\n *   <Breadcrumbs.Link href=\"/section\">Section</Breadcrumbs.Link>\n *   <Breadcrumbs.Link href=\"/section/sub-section\">Sub-section</Breadcrumbs.Link>\n *   Current page\n * </Breadcrumbs>\n * ```\n *\n * Providing links with, or without React Router\n * ```jsx\n * import { Link } from 'react-router-dom';\n *\n * <Breadcrumbs>\n *   <Breadcrumbs.Link as={Link} to=\"/section\">Section</Breadcrumbs.Link>\n *   <Breadcrumbs.Link href=\"/section\">Sub-section</Breadcrumbs.Link>\n * </Breadcrumbs>\n * ```\n *\n * ### References:\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/components/breadcrumbs/_breadcrumbs.scss\n *\n */\n\nvar Breadcrumbs = function Breadcrumbs(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\"]);\n\n  return React.createElement(BreadcrumbsContainer, props, React.createElement(BreadcrumbsList, null, children.length && children.map ? children.map(function (child, i) {\n    return child && (child.length || child.props) ? React.createElement(BreadcrumbsListItem, {\n      key: child.key || i\n    }, child) : null;\n  }) : React.createElement(BreadcrumbsListItem, null, children)));\n};\n\nBreadcrumbs.Link = Link;\nexport default Breadcrumbs;","import React from 'react';\nimport styled from 'styled-components';\nimport { SPACING_POINTS } from '@govuk-react/constants';\nimport { spacing, typography } from '@govuk-react/lib';\nvar ListItem = styled('li')( // including font definition here is belt & braces\n// govuk-frontend doesn't bother to do that\ntypography.font({\n  size: 19\n}), {\n  marginBottom: SPACING_POINTS[1]\n}, spacing.withWhiteSpace());\n/**\n *\n * ### Usage\n *\n *\n * Simple\n * ```jsx\n * <ListItem>List item example</ListItem>\n * ```\n *\n * With a link\n * ```jsx\n * import { Link } from '@govuk-react/link';\n *\n * <ListItem>\n *   <Link href=\"https://www.google.com/\">List item example</Link>\n * </ListItem>\n * ```\n *\n * ### References\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/core/_lists.scss\n */\n// Do the react-docgen dance\n\nvar DocumentedComponent = function DocumentedComponent(props) {\n  return React.createElement(ListItem, props);\n};\n\nListItem.propTypes = DocumentedComponent.propTypes;\nexport { DocumentedComponent };\nexport default ListItem;","import React from 'react';\nimport styled from 'styled-components';\nimport { MEDIA_QUERIES, SPACING_POINTS } from '@govuk-react/constants';\nimport { spacing, typography } from '@govuk-react/lib';\nimport ListItem from '@govuk-react/list-item';\n\nfunction translateType(type) {\n  return {\n    bullet: 'disc',\n    number: 'decimal'\n  }[type] || type;\n}\n\nvar OrderedList = styled('ol')(typography.font({\n  size: 19\n}), typography.textColour, {\n  marginTop: 0,\n  '& &': {\n    marginTop: SPACING_POINTS[2]\n  }\n}, spacing.withWhiteSpace({\n  margin: {\n    size: 4,\n    direction: 'bottom'\n  }\n}), function (_ref) {\n  var _ref2, _ref3, _ref4;\n\n  var listStyleType = _ref.listStyleType;\n  var type = translateType(listStyleType);\n  return [{\n    listStyleType: type\n  }, type === 'none' ? {\n    paddingLeft: 0\n  } : {\n    paddingLeft: SPACING_POINTS[4]\n  }, // TODO consider whether these spacing adjusts should be for all non-`none` styles\n  // NB the inclusion of these ensures that withWhiteSpace's mb prop doesn't work on ListItem\n  ['disc', 'decimal'].includes(type) ? (_ref3 = {}, _ref3[\"> \" + ListItem] = (_ref2 = {\n    marginBottom: 0\n  }, _ref2[MEDIA_QUERIES.TABLET] = {\n    marginBottom: SPACING_POINTS[1]\n  }, _ref2), _ref3) : (_ref4 = {}, _ref4[\"> \" + ListItem] = {\n    marginBottom: SPACING_POINTS[1]\n  }, _ref4)];\n});\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * import OrderedList from '@govuk-react/ordered-list';\n * import ListItem from '@govuk-react/list-item';\n *\n * <OrderedList>\n *   <ListItem>Lorem ipsum dolor sit.</ListItem>\n *   <ListItem>Consectetur adipiscing elit.</ListItem>\n *   <ListItem>Curabitur et libero nec.</ListItem>\n * </OrderedList>\n * ```\n *\n * with Roman\n * ```jsx\n * import OrderedList from '@govuk-react/ordered-list';\n * import ListItem from '@govuk-react/list-item';\n *\n * <OrderedList listStyleType=\"lower-roman\">\n *   <ListItem>Lorem ipsum dolor sit.</ListItem>\n *   <ListItem>Consectetur adipiscing elit.</ListItem>\n *   <ListItem>Curabitur et libero nec.</ListItem>\n * </OrderedList>\n * ```\n *\n * ### References\n * - https://design-system.service.gov.uk/styles/typography/#lists\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/core/_lists.scss\n *\n * ### TODO\n * - Consider using the context API https://github.com/reactjs/rfcs/blob/master/text/0002-new-version-of-context.md\n */\n// Create a component wrapper for react-docgen only\n\nvar DocumentedComponent = function DocumentedComponent(props) {\n  return React.createElement(OrderedList, props);\n};\n\nDocumentedComponent.defaultProps = {\n  listStyleType: undefined\n};\nOrderedList.defaultProps = DocumentedComponent.defaultProps;\nOrderedList.propTypes = DocumentedComponent.propTypes; // Named export so react-docgen will generate docs\n\nexport { DocumentedComponent }; // Export un-wrapped styled component\n\nexport default OrderedList;","function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport React from 'react';\nimport OrderedList from '@govuk-react/ordered-list';\n/**\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * import UnorderedList from '@govuk-react/unordered-list';\n * import ListItem from '@govuk-react/list-item';\n *\n * <UnorderedList>\n *   <ListItem>Lorem ipsum dolor sit.</ListItem>\n *   <ListItem>Consectetur adipiscing elit.</ListItem>\n *   <ListItem>Curabitur et libero nec.</ListItem>\n * </UnorderedList>\n * ```\n *\n * with Roman\n * ```jsx\n * import UnorderedList from '@govuk-react/unordered-list';\n * import ListItem from '@govuk-react/list-item';\n *\n * <UnorderedList listStyleType=\"lower-roman\">\n *   <ListItem>Lorem ipsum dolor sit.</ListItem>\n *   <ListItem>Consectetur adipiscing elit.</ListItem>\n *   <ListItem>Curabitur et libero nec.</ListItem>\n * </UnorderedList>\n * ```\n *\n * ### References\n * - https://design-system.service.gov.uk/styles/typography/#lists\n * - https://github.com/alphagov/govuk-frontend/blob/master/src/core/_lists.scss\n */\n\nvar UnorderedList = function UnorderedList(props) {\n  return React.createElement(OrderedList, _extends({\n    as: \"ul\"\n  }, props));\n};\n\nUnorderedList.defaultProps = {\n  listStyleType: undefined\n};\nexport default UnorderedList;","import React from \"react\";\nimport styled from \"styled-components\";\nimport {spacing,typography} from \"@govuk-react/lib\";\n\nexport default styled(\"p\")(\n    {\n        margin: 0,\n    },\n    typography.font({\n        size: 19\n    }),\n    spacing.withWhiteSpace({\n        marginBottom: 4\n    })\n);\n","var _styled;\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { GUTTER_HALF, MEDIA_QUERIES } from '@govuk-react/constants';\nimport { spacing } from '@govuk-react/lib';\nvar StyledRow = styled('div')((_styled = {\n  display: 'flex',\n  flexDirection: 'column',\n  margin: \"0 -\" + GUTTER_HALF\n}, _styled[MEDIA_QUERIES.LARGESCREEN] = {\n  flexDirection: 'row'\n}, _styled), spacing.withWhiteSpace());\n/**\n *\n * ### Usage\n *\n * Example\n * * https://codesandbox.io/s/x917knwm4z\n *\n * Simple\n * ```jsx\n * import GridRow from '@govuk-react/grid-row';\n * import GridCol from '@govuk-react/grid-col';\n *\n * <Fragment>\n *   <GridRow>\n *     <GridCol>\n *       ...\n *     </GridCol>\n *   </GridRow>\n * </Fragment>\n * ```\n *\n * ### References:\n * - https://github.com/alphagov/govuk_frontend_toolkit/blob/master/stylesheets/_grid_layout.scss\n * - https://github.com/alphagov/govuk_elements/blob/master/assets/sass/elements/_layout.scss\n *\n */\n\nvar GridRow = function GridRow(props) {\n  return React.createElement(StyledRow, props);\n};\n\nexport default GridRow;","import React from 'react';\nimport styled from 'styled-components';\nimport { GUTTER_HALF, MEDIA_QUERIES, WIDTHS } from '@govuk-react/constants';\nimport { spacing } from '@govuk-react/lib';\nvar colValues = {\n  columnOneQuarter: '25%',\n  columnOneThird: '33.3333%',\n  columnOneHalf: '50%',\n  columnTwoThirds: '66.6667%',\n  columnThreeQuarters: '75%',\n  columnFull: '100%'\n};\nvar widthFromProps = spacing.withWidth({\n  noDefault: true\n});\nvar desktopWidthFromProps = spacing.withWidth({\n  mediaQuery: MEDIA_QUERIES.DESKTOP,\n  noDefault: true\n});\n\nfunction setGrowShrink(style) {\n  var hasAutoWidth = [undefined, 'auto'].includes(style.width); // No explicit width means auto, so grow/shrink should be set\n\n  return Object.assign({}, style, {\n    flexGrow: hasAutoWidth ? 1 : 0,\n    flexShrink: hasAutoWidth ? 1 : 0\n  });\n}\n\nvar StyledColumn = styled('div')({\n  boxSizing: 'border-box',\n  paddingRight: GUTTER_HALF,\n  paddingLeft: GUTTER_HALF\n}, function (props) {\n  // if setWidth is set, then columnOneQuarter etc props will be ignored\n  var widthStyle = widthFromProps(props);\n\n  if (!widthStyle) {\n    var _widthStyle;\n\n    var widthValue;\n    Object.entries(props).forEach(function (_ref) {\n      var key = _ref[0],\n          value = _ref[1];\n\n      if (colValues[key] && value === true) {\n        if (process.env.NODE_ENV !== 'production') {\n          var newKey = key.replace('column', '').replace(/^([A-Z][a-z]+)([A-Z])/, '$1-$2').toLocaleLowerCase(); // eslint-disable-next-line no-console\n\n          console.warn(\"deprecated prop \" + key + \" used in GridCol, please replace with setWidth=\\\"\" + newKey + \"\\\"\");\n        }\n\n        widthValue = colValues[key];\n      }\n    });\n    widthStyle = (_widthStyle = {}, _widthStyle[MEDIA_QUERIES.TABLET] = {\n      width: widthValue\n    }, _widthStyle);\n  }\n\n  widthStyle[MEDIA_QUERIES.TABLET] = setGrowShrink(widthStyle[MEDIA_QUERIES.TABLET]);\n  var desktopWidthStyle = desktopWidthFromProps({\n    setWidth: props.setDesktopWidth\n  });\n\n  if (desktopWidthStyle) {\n    desktopWidthStyle[MEDIA_QUERIES.DESKTOP] = setGrowShrink(desktopWidthStyle[MEDIA_QUERIES.DESKTOP]);\n  }\n\n  return Object.assign({}, widthStyle, desktopWidthStyle);\n});\n/**\n *\n * Should always be wrapped by `GridRow`. Will always render a column at full width if\n * the browser width is below the `TABLET` breakpoint.\n *\n * NB our grid is based on flex-box, which differs from govuk-frontend, which instead uses\n * floats, however it is otherwise similar to use.\n *\n * ### Usage\n *\n * Simple\n * ```jsx\n * import GridRow from '@govuk-react/grid-row';\n * import GridCol from '@govuk-react/grid-col';\n *\n * <Fragment>\n *   <GridRow>\n *     <GridCol>\n *       ...\n *     </GridCol>\n *   </GridRow>\n *   <GridRow>\n *     <GridCol setWidth=\"one-half\">\n *       ...\n *     </GridCol>\n *     <GridCol setWidth=\"one-quarter\">\n *       ...\n *     </GridCol>\n *     <GridCol setWidth=\"one-quarter\">\n *       ...\n *     </GridCol>\n *   <GridRow>\n *     <GridCol setWidth=\"one-third\">\n *       ...\n *     </GridCol>\n *     <GridCol setWidth=\"two-thirds\">\n *       ...\n *     </GridCol>\n *   </GridRow>\n *   <GridRow>\n *     <GridCol setWidth=\"one-third\" setDesktopWidth=\"one-quarter\">\n *       ...\n *     </GridCol>\n *     <GridCol setWidth=\"two-thirds\" setDesktopWidth=\"auto\">\n *       ...\n *     </GridCol>\n *   </GridRow>\n * </Fragment>\n * ```\n *\n * ### References:\n * - https://github.com/alphagov/govuk_frontend_toolkit/blob/master/stylesheets/_grid_layout.scss\n * - https://github.com/alphagov/govuk_elements/blob/master/assets/sass/elements/_layout.scss\n *\n */\n\nvar GridCol = function GridCol(props) {\n  return React.createElement(StyledColumn, props);\n};\n\nGridCol.defaultProps = {\n  children: undefined,\n  columnOneQuarter: false,\n  columnOneThird: false,\n  columnOneHalf: false,\n  columnTwoThirds: false,\n  columnThreeQuarters: false,\n  columnFull: false,\n  setWidth: undefined,\n  setDesktopWidth: undefined\n};\nexport default GridCol;","import React, {Fragment} from \"react\";\nimport config from \"../../config\";\nimport {hash, Pocket} from \"../../utilities\";\nimport {arrayHasElements,ensureNumber} from \"js-utilities\";\n\nimport BreadCrumbs from \"@govuk-react/breadcrumbs\";\nimport WarningText from \"@govuk-react/warning-text\";\nimport GridRow from \"@govuk-react/grid-row\";\nimport GridCol from \"@govuk-react/grid-col\";\nimport {H2} from \"@govuk-react/heading\";\nimport UnorderedList from \"@govuk-react/unordered-list\";\nimport ListItem from \"@govuk-react/list-item\";\nimport Paragraph from \"../basic/paragraph\";\nimport Link from \"@govuk-react/link\";\n\nfunction getLawType(laws: Pocket[], type: string) {\n    return laws\n        .filter(law => law.frontmatter?.type === type)\n        .sort((lhs, rhs) => ensureNumber(lhs.frontmatter?.order) - ensureNumber(rhs.frontmatter?.order));\n}\n\nfunction displayLawLinks(laws: Pocket[], emptyMessage: string) {\n    if (arrayHasElements(laws)) {\n        return (\n            <UnorderedList>\n                {laws.map(law => (\n                    <ListItem key={hash(\"law\", law)}>\n                        <Link href={config.roots.laws + law.slug}>\n                            {law.frontmatter?.title ?? \"Law\"}\n                        </Link>\n                    </ListItem>\n                ))}\n            </UnorderedList>\n        );\n    }\n    return (\n        <Paragraph><i>{emptyMessage}</i></Paragraph>\n    );\n}\n\nexport default function ({ pageContext }) {\n    const laws = pageContext.laws ?? [];\n    const constitution = getLawType(laws, \"CONSTITUTION\");\n    const treaties = getLawType(laws, \"TREATY\");\n    const orders = getLawType(laws, \"STANDING ORDER\");\n    const precedents = getLawType(laws, \"PRECEDENT\");\n    return (\n        <Fragment>\n            <BreadCrumbs>\n                <BreadCrumbs.Link href=\"../\">\n                    Wesbury\n                </BreadCrumbs.Link>\n                Laws\n            </BreadCrumbs>\n            <GridRow>\n                <GridCol setWidth=\"one-half\">\n                    <H2>Constitution</H2>\n                    {displayLawLinks(constitution, \"Wesbury does not have any charter documents.\")}\n                    <br/>\n                </GridCol>\n                <GridCol setWidth=\"one-half\">\n                    <H2>Treaties</H2>\n                    {displayLawLinks(treaties, \"Wesbury current has no treaties.\")}\n                    <br/>\n                </GridCol>\n            </GridRow>\n            <GridRow>\n                <GridCol setWidth=\"one-half\">\n                    <H2>Standing Orders</H2>\n                    {displayLawLinks(orders, \"Wesbury currently has no standing orders.\")}\n                    <br/>\n                </GridCol>\n                <GridCol setWidth=\"one-half\">\n                    <H2>Precedents</H2>\n                    {displayLawLinks(precedents, \"Wesbury currently has no precedents.\")}\n                    <br/>\n                </GridCol>\n            </GridRow>\n        </Fragment>\n    );\n}\n"],"sourceRoot":""}